<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wing.mybatis.product.mapper.UserMapper">
  <resultMap id="BaseResultMap" type="com.wing.mybatis.product.domain.User">
    <!-- WARNING - @mbg.generated -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="age" jdbcType="INTEGER" property="age" />
    <result column="address" jdbcType="VARCHAR" property="location" />
    <result column="status" jdbcType="INTEGER" property="status" typeHandler="com.wing.mybatis.sample.common.StatusTypeHandler" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.wing.mybatis.product.domain.User">
    <!-- WARNING - @mbg.generated -->
    <result column="feature" jdbcType="LONGVARBINARY" property="feature" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!-- WARNING - @mbg.generated -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
            <foreach collection="criteria.statusCriteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value,typeHandler=com.wing.mybatis.sample.common.StatusTypeHandler}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value,typeHandler=com.wing.mybatis.sample.common.StatusTypeHandler} and #{criterion.secondValue,typeHandler=com.wing.mybatis.sample.common.StatusTypeHandler}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem,typeHandler=com.wing.mybatis.sample.common.StatusTypeHandler}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!-- WARNING - @mbg.generated -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
            <foreach collection="criteria.statusCriteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value,typeHandler=com.wing.mybatis.sample.common.StatusTypeHandler}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value,typeHandler=com.wing.mybatis.sample.common.StatusTypeHandler} and #{criterion.secondValue,typeHandler=com.wing.mybatis.sample.common.StatusTypeHandler}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem,typeHandler=com.wing.mybatis.sample.common.StatusTypeHandler}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!-- WARNING - @mbg.generated -->
    id, `name`, age, address, `status`, create_time, update_time
  </sql>
  <sql id="Blob_Column_List">
    <!-- WARNING - @mbg.generated -->
    feature
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.wing.mybatis.product.example.UserExample" resultMap="ResultMapWithBLOBs">
    <!-- WARNING - @mbg.generated -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="rows != null">
      <if test="offset != null">
        limit ${offset}, ${rows}
      </if>
      <if test="offset == null">
        limit ${rows}
      </if>
    </if>
  </select>
  <select id="selectByExample" parameterType="com.wing.mybatis.product.example.UserExample" resultMap="BaseResultMap">
    <!-- WARNING - @mbg.generated -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="rows != null">
      <if test="offset != null">
        limit ${offset}, ${rows}
      </if>
      <if test="offset == null">
        limit ${rows}
      </if>
    </if>
  </select>
  <select id="selectByExampleWithColumn" parameterType="map" resultMap="ResultMapWithBLOBs">
    <!-- WARNING - @mbg.generated -->
    select
    <if test="example != null and example.distinct">
      distinct
    </if>
    <choose>
      <when test="columns != null and columns.length > 0">
        <foreach collection="columns" item="column" separator=",">
          ${column.delimitedColumnName}
        </foreach>
      </when>
      <otherwise>
        null
      </otherwise>
    </choose>
    from user
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example != null and example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
    <if test="example != null">
      <if test="example.rows != null">
        <if test="example.offset != null">
          limit ${example.offset}, ${example.rows}
        </if>
        <if test="example.offset == null">
          limit ${example.rows}
        </if>
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    <!-- WARNING - @mbg.generated -->
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from user
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectByPrimaryKeyWithColumn" parameterType="map" resultMap="ResultMapWithBLOBs">
    <!-- WARNING - @mbg.generated -->
    select
    <choose>
      <when test="columns != null and columns.length > 0">
        <foreach collection="columns" item="column" separator=",">
          ${column.delimitedColumnName}
        </foreach>
      </when>
      <otherwise>
        null
      </otherwise>
    </choose>
    from user
     where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!-- WARNING - @mbg.generated -->
    delete from user
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.wing.mybatis.product.example.UserExample">
    <!-- WARNING - @mbg.generated -->
    delete from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.wing.mybatis.product.domain.User" useGeneratedKeys="true">
    <!-- WARNING - @mbg.generated -->
    insert into user (`name`, age, address, 
      `status`, 
      create_time, update_time, feature
      )
    values (#{name,jdbcType=VARCHAR}, #{age,jdbcType=INTEGER}, #{location,jdbcType=VARCHAR}, 
      #{status,jdbcType=INTEGER,typeHandler=com.wing.mybatis.sample.common.StatusTypeHandler}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{feature,jdbcType=LONGVARBINARY}
      )
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.wing.mybatis.product.domain.User" useGeneratedKeys="true">
    <!-- WARNING - @mbg.generated -->
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="name != null">
        `name`,
      </if>
      <if test="age != null">
        age,
      </if>
      <if test="location != null">
        address,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="feature != null">
        feature,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        #{age,jdbcType=INTEGER},
      </if>
      <if test="location != null">
        #{location,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER,typeHandler=com.wing.mybatis.sample.common.StatusTypeHandler},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="feature != null">
        #{feature,jdbcType=LONGVARBINARY},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.wing.mybatis.product.example.UserExample" resultType="java.lang.Long">
    <!-- WARNING - @mbg.generated -->
    select count(*) from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!-- WARNING - @mbg.generated -->
    update user
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.name != null">
        `name` = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.age != null">
        age = #{record.age,jdbcType=INTEGER},
      </if>
      <if test="record.location != null">
        address = #{record.location,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        `status` = #{record.status,jdbcType=INTEGER,typeHandler=com.wing.mybatis.sample.common.StatusTypeHandler},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.feature != null">
        feature = #{record.feature,jdbcType=LONGVARBINARY},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    <!-- WARNING - @mbg.generated -->
    update user
    set id = #{record.id,jdbcType=BIGINT},
      `name` = #{record.name,jdbcType=VARCHAR},
      age = #{record.age,jdbcType=INTEGER},
      address = #{record.location,jdbcType=VARCHAR},
      `status` = #{record.status,jdbcType=INTEGER,typeHandler=com.wing.mybatis.sample.common.StatusTypeHandler},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      feature = #{record.feature,jdbcType=LONGVARBINARY}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!-- WARNING - @mbg.generated -->
    update user
    set id = #{record.id,jdbcType=BIGINT},
      `name` = #{record.name,jdbcType=VARCHAR},
      age = #{record.age,jdbcType=INTEGER},
      address = #{record.location,jdbcType=VARCHAR},
      `status` = #{record.status,jdbcType=INTEGER,typeHandler=com.wing.mybatis.sample.common.StatusTypeHandler},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.wing.mybatis.product.domain.User">
    <!-- WARNING - @mbg.generated -->
    update user
    <set>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        age = #{age,jdbcType=INTEGER},
      </if>
      <if test="location != null">
        address = #{location,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=INTEGER,typeHandler=com.wing.mybatis.sample.common.StatusTypeHandler},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="feature != null">
        feature = #{feature,jdbcType=LONGVARBINARY},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.wing.mybatis.product.domain.User">
    <!-- WARNING - @mbg.generated -->
    update user
    set `name` = #{name,jdbcType=VARCHAR},
      age = #{age,jdbcType=INTEGER},
      address = #{location,jdbcType=VARCHAR},
      `status` = #{status,jdbcType=INTEGER,typeHandler=com.wing.mybatis.sample.common.StatusTypeHandler},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      feature = #{feature,jdbcType=LONGVARBINARY}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.wing.mybatis.product.domain.User">
    <!-- WARNING - @mbg.generated -->
    update user
    set `name` = #{name,jdbcType=VARCHAR},
      age = #{age,jdbcType=INTEGER},
      address = #{location,jdbcType=VARCHAR},
      `status` = #{status,jdbcType=INTEGER,typeHandler=com.wing.mybatis.sample.common.StatusTypeHandler},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <insert id="insertWithColumn" keyColumn="id" keyProperty="record.id" parameterType="map" useGeneratedKeys="true">
    <!-- WARNING - @mbg.generated -->
    insert into user (
    <choose>
      <when test="columns != null and columns.length > 0">
        <foreach collection="columns" item="column" separator=",">
          ${column.delimitedColumnName}
        </foreach>
      </when>
    </choose>
     ) values ( 
    <choose>
      <when test="columns != null and columns.length > 0">
        <foreach collection="columns" item="column" separator=",">
          <choose>
            <when test="'status' == column.column">
              #{record.${column.javaProperty},jdbcType=INTEGER,typeHandler=com.wing.mybatis.sample.common.StatusTypeHandler}
            </when>
            <otherwise>
              #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
            </otherwise>
          </choose>
        </foreach>
      </when>
    </choose>
     )
  </insert>
  <update id="updateByPrimaryKeyWithColumn" parameterType="map">
    <!-- WARNING - @mbg.generated -->
    update user
    set
    <choose>
      <when test="columns != null and columns.length > 0">
        <foreach collection="columns" item="column" separator=",">
          <choose>
            <when test="'status' == column.column">
              ${column.delimitedColumnName} = #{record.${column.javaProperty},jdbcType=INTEGER,typeHandler=com.wing.mybatis.sample.common.StatusTypeHandler}
            </when>
            <otherwise>
              ${column.delimitedColumnName} = #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
            </otherwise>
          </choose>
        </foreach>
      </when>
    </choose>
     where id = #{record.id,jdbcType=BIGINT}
  </update>
  <update id="updateByExampleWithColumn" parameterType="map">
    <!-- WARNING - @mbg.generated -->
    update user
    set
    <choose>
      <when test="columns != null and columns.length > 0">
        <foreach collection="columns" item="column" separator=",">
          <choose>
            <when test="'status' == column.column">
              ${column.delimitedColumnName} = #{record.${column.javaProperty},jdbcType=INTEGER,typeHandler=com.wing.mybatis.sample.common.StatusTypeHandler}
            </when>
            <otherwise>
              ${column.delimitedColumnName} = #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
            </otherwise>
          </choose>
        </foreach>
      </when>
    </choose>
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <insert id="batchInsert" keyColumn="id" keyProperty="id" parameterType="map" useGeneratedKeys="true">
    <!-- WARNING - @mbg.generated -->
    insert into user ( 
    `name`, age, address, `status`, create_time, update_time, feature
     ) values 
    <foreach collection="list" item="item" separator=",">
      ( #{item.name,jdbcType=VARCHAR}, #{item.age,jdbcType=INTEGER}, #{item.location,jdbcType=VARCHAR}, #{item.status,jdbcType=INTEGER,typeHandler=com.wing.mybatis.sample.common.StatusTypeHandler}, #{item.createTime,jdbcType=TIMESTAMP}, #{item.updateTime,jdbcType=TIMESTAMP}, #{item.feature,jdbcType=LONGVARBINARY} )
    </foreach>
  </insert>
  <insert id="batchInsertWithColumn" keyColumn="id" keyProperty="list.id" parameterType="map" useGeneratedKeys="true">
    <!-- WARNING - @mbg.generated -->
    insert into user (
    <choose>
      <when test="columns != null and columns.length > 0">
        <foreach collection="columns" item="column" separator=",">
          ${column.delimitedColumnName}
        </foreach>
      </when>
    </choose>
     ) values 
    <foreach collection="list" item="record" separator=",">
      (
      <choose>
        <when test="columns != null and columns.length > 0">
          <foreach collection="columns" item="column" separator=",">
            <choose>
              <when test="'status' == column.column">
                #{record.${column.javaProperty},jdbcType=INTEGER,typeHandler=com.wing.mybatis.sample.common.StatusTypeHandler}
              </when>
              <otherwise>
                #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
              </otherwise>
            </choose>
          </foreach>
        </when>
      </choose>
      )
    </foreach>
  </insert>
  <insert id="upsert" keyColumn="id" keyProperty="id" parameterType="com.wing.mybatis.product.domain.User" useGeneratedKeys="true">
    <!-- WARNING - @mbg.generated -->
    insert into user (
    <trim suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      `name`,
      age,
      address,
      `status`,
      create_time,
      update_time,
    </trim>
    ) values (
    <trim suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      #{name,jdbcType=VARCHAR},
      #{age,jdbcType=INTEGER},
      #{location,jdbcType=VARCHAR},
      #{status,jdbcType=INTEGER,typeHandler=com.wing.mybatis.sample.common.StatusTypeHandler},
      #{createTime,jdbcType=TIMESTAMP},
      #{updateTime,jdbcType=TIMESTAMP},
    </trim>
    ) on duplicate key update 
    <trim suffixOverrides=",">
      <if test="id != null">
        id = #{id,jdbcType=BIGINT},
      </if>
      `name` = #{name,jdbcType=VARCHAR},
      age = #{age,jdbcType=INTEGER},
      address = #{location,jdbcType=VARCHAR},
      `status` = #{status,jdbcType=INTEGER,typeHandler=com.wing.mybatis.sample.common.StatusTypeHandler},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
    </trim>
  </insert>
  <insert id="upsertWithBLOBs" keyColumn="id" keyProperty="id" parameterType="com.wing.mybatis.product.domain.User" useGeneratedKeys="true">
    <!-- WARNING - @mbg.generated -->
    insert into user (
    <trim suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      `name`,
      age,
      address,
      `status`,
      create_time,
      update_time,
      feature,
    </trim>
    ) values (
    <trim suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      #{name,jdbcType=VARCHAR},
      #{age,jdbcType=INTEGER},
      #{location,jdbcType=VARCHAR},
      #{status,jdbcType=INTEGER,typeHandler=com.wing.mybatis.sample.common.StatusTypeHandler},
      #{createTime,jdbcType=TIMESTAMP},
      #{updateTime,jdbcType=TIMESTAMP},
      #{feature,jdbcType=LONGVARBINARY},
    </trim>
    ) on duplicate key update 
    <trim suffixOverrides=",">
      <if test="id != null">
        id = #{id,jdbcType=BIGINT},
      </if>
      `name` = #{name,jdbcType=VARCHAR},
      age = #{age,jdbcType=INTEGER},
      address = #{location,jdbcType=VARCHAR},
      `status` = #{status,jdbcType=INTEGER,typeHandler=com.wing.mybatis.sample.common.StatusTypeHandler},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      feature = #{feature,jdbcType=LONGVARBINARY},
    </trim>
  </insert>
  <insert id="upsertSelective" keyColumn="id" keyProperty="id" parameterType="com.wing.mybatis.product.domain.User" useGeneratedKeys="true">
    <!-- WARNING - @mbg.generated -->
    insert into user (
    <trim suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        `name`,
      </if>
      <if test="age != null">
        age,
      </if>
      <if test="location != null">
        address,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="feature != null">
        feature,
      </if>
    </trim>
    ) values (
    <trim suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        #{age,jdbcType=INTEGER},
      </if>
      <if test="location != null">
        #{location,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER,typeHandler=com.wing.mybatis.sample.common.StatusTypeHandler},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="feature != null">
        #{feature,jdbcType=LONGVARBINARY},
      </if>
    </trim>
    ) on duplicate key update 
    <trim suffixOverrides=",">
      <if test="id != null">
        id = #{id,jdbcType=BIGINT},
      </if>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        age = #{age,jdbcType=INTEGER},
      </if>
      <if test="location != null">
        address = #{location,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=INTEGER,typeHandler=com.wing.mybatis.sample.common.StatusTypeHandler},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="feature != null">
        feature = #{feature,jdbcType=LONGVARBINARY},
      </if>
    </trim>
  </insert>
</mapper>